version: '3.8'

services:
  db:
    profiles: ["5gs"]
    container_name: mongodb
    image: mongo
    command: mongod --port 27017
    expose:
      - "27017"
    volumes:
      - dbdata:/data/db
    networks:
      5gs-bridge:
        aliases:
          - db

  free5gc-amf:
    profiles: ["5gs"]
    container_name: amf
    image: free5gc/amf:v3.4.1
    command: ./amf -c ./config/amfcfg.yaml
    expose:
      - "8000"
    volumes:
      - ./config/amfcfg.yaml:/free5gc/config/amfcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      5gs-bridge:
        ipv4_address: 10.100.200.131
        aliases:
          - amf.free5gc.org
    depends_on:
      - free5gc-nrf

  free5gc-nrf:
    profiles: ["5gs"]
    container_name: nrf
    image: free5gc/nrf:v3.4.1
    command: ./nrf -c ./config/nrfcfg.yaml
    expose:
      - "8000"
    volumes:
      - ./config/nrfcfg.yaml:/free5gc/config/nrfcfg.yaml
    environment:
      DB_URI: mongodb://db/free5gc
      GIN_MODE: release
    networks:
      5gs-bridge:
        ipv4_address: 10.100.200.132
        aliases:
          - nrf.free5gc.org
    depends_on:
      - db

  free5gc-ausf:
    profiles: ["5gs"]
    container_name: ausf
    image: free5gc/ausf:v3.4.1
    command: ./ausf -c ./config/ausfcfg.yaml
    expose:
      - "8000"
    volumes:
      - ./config/ausfcfg.yaml:/free5gc/config/ausfcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      5gs-bridge:
        ipv4_address: 10.100.200.133
        aliases:
          - ausf.free5gc.org
    depends_on:
      - free5gc-nrf

  free5gc-nssf:
    profiles: ["5gs"]
    container_name: nssf
    image: free5gc/nssf:v3.4.1
    command: ./nssf -c ./config/nssfcfg.yaml
    expose:
      - "8000"
    volumes:
      - ./config/nssfcfg.yaml:/free5gc/config/nssfcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      5gs-bridge:
        ipv4_address: 10.100.200.134
        aliases:
          - nssf.free5gc.org
    depends_on:
      - free5gc-nrf

  free5gc-pcf:
    profiles: ["5gs"]
    container_name: pcf
    image: free5gc/pcf:v3.4.1
    command: ./pcf -c ./config/pcfcfg.yaml
    expose:
      - "8000"
    volumes:
      - ./config/pcfcfg.yaml:/free5gc/config/pcfcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      5gs-bridge:
        ipv4_address: 10.100.200.135
        aliases:
          - pcf.free5gc.org
    depends_on:
      - free5gc-nrf

  free5gc-smf:
    profiles: ["5gs"]
    container_name: smf
    image: free5gc/smf:v3.4.1
    command: ./smf -c ./config/smfcfg.yaml -u ./config/uerouting.yaml
    expose:
      - "8000"
    volumes:
      - ./config/smfcfg.yaml:/free5gc/config/smfcfg.yaml
      - ./config/uerouting.yaml:/free5gc/config/uerouting.yaml
    environment:
      GIN_MODE: release
    networks:
      5gs-bridge:
        ipv4_address: 10.100.200.136
        aliases:
          - smf.free5gc.org
    depends_on:
      - free5gc-nrf
      - free5gc-upf

  free5gc-udm:
    profiles: ["5gs"]
    container_name: udm
    image: free5gc/udm:v3.4.1
    command: ./udm -c ./config/udmcfg.yaml
    expose:
      - "8000"
    volumes:
      - ./config/udmcfg.yaml:/free5gc/config/udmcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      5gs-bridge:
        aliases:
          - udm.free5gc.org
    depends_on:
      - db
      - free5gc-nrf

  free5gc-udr:
    profiles: ["5gs"]
    container_name: udr
    image: free5gc/udr:v3.4.1
    command: ./udr -c ./config/udrcfg.yaml
    expose:
      - "8000"
    volumes:
      - ./config/udrcfg.yaml:/free5gc/config/udrcfg.yaml
    environment:
      DB_URI: mongodb://db/free5gc
      GIN_MODE: release
    networks:
      5gs-bridge:
        aliases:
          - udr.free5gc.org
    depends_on:
      - db
      - free5gc-nrf

  free5gc-chf:
    profiles: ["5gs"]
    container_name: chf
    image: free5gc/chf:v3.4.1
    command: ./chf -c ./config/chfcfg.yaml
    expose:
      - "8000"
    volumes:
      - ./config/chfcfg.yaml:/free5gc/config/chfcfg.yaml
    environment:
      DB_URI: mongodb://db/free5gc
      GIN_MODE: release
    networks:
      5gs-bridge:
        aliases:
          - chf.free5gc.org
    depends_on:
      - db
      - free5gc-nrf
      - free5gc-webui

  free5gc-webui:
    profiles: ["5gs"]
    container_name: webui
    image: free5gc/webui:v3.4.1
    command: ./webui -c ./config/webuicfg.yaml
    expose:
      - "2122"
      - "2121"
    volumes:
      - ./config/webuicfg.yaml:/free5gc/config/webuicfg.yaml
    environment:
      - GIN_MODE=release
    networks:
      5gs-bridge:
        aliases:
          - webui
    ports:
      - "5000:5000"
      - "2122:2122"
      - "2121:2121"
    depends_on:
      - db
      - free5gc-nrf

  free5gc-upf:
    profiles: ["5gs"]
    container_name: upf
    privileged: true
    build:
      context: ./
      dockerfile: ./docker/free5gc/upf/Dockerfile
    command: ./bin/upf -c /free5gc/config/upfcfg.yaml
    volumes:
      - ./config/upfcfg.yaml:/free5gc/config/upfcfg.yaml
      # We bind the source from the host so all changes are reflected in ./go-upf and can be committed from there
      - ./go-upf:/free5gc/NFs/upf
    networks:
      5gs-bridge: # eth0
        ipv4_address: 10.100.200.137
        aliases:
          - upf.free5gc.org
      tsn-bridge-in: # eth1
        ipv4_address: 10.100.201.100

  oai-gnb:
    profiles: ["5gs"]
    image: oaisoftwarealliance/oai-gnb:develop
    privileged: true
    container_name: oai-gnb
    environment:
        USE_ADDITIONAL_OPTIONS: --sa -E --rfsim --log_config.global_log_options level,nocolor,time
        ASAN_OPTIONS: detect_leaks=0
    depends_on:
      - free5gc-amf
      - free5gc-upf
    networks:
      5gs-bridge:
        ipv4_address: 10.100.200.140
    cap_add:
      - NET_ADMIN
    volumes:
        - ./config/gnb.sa.band78.106prb.rfsim.conf:/opt/oai-gnb/etc/gnb.conf
    healthcheck:
        test: /bin/bash -c "pgrep nr-softmodem"
        interval: 10s
        timeout: 5s
        retries: 5

  oai-nr-ue:
    profiles: ["5gs"]
    image: oai-nr-ue:develop
    privileged: true
    container_name: oai-nr-ue
    command: /opt/oai-nr-ue/bin/nr-uesoftmodem -O /opt/oai-nr-ue/etc/nr-ue.conf
    entrypoint: /tini -v -- /opt/oai-nr-ue/bin/entrypoint.sh
    environment:
        USE_ADDITIONAL_OPTIONS: -E --sa --rfsim -r 106 --numerology 1 --uicc0.imsi 208930000000001 -C 3619200000 --rfsimulator.serveraddr 10.100.200.140 --log_config.global_log_options level,nocolor,time
    depends_on:
        - oai-gnb
    networks:
      5gs-bridge:
        ipv4_address: 10.100.200.150
      tsn-bridge-out:
        ipv4_address: 10.100.202.100
    cap_add:
      - NET_ADMIN
    volumes:
        - ./config/nrue.uicc.conf:/opt/oai-nr-ue/etc/nr-ue.conf
    healthcheck:
        test: /bin/bash -c "pgrep nr-uesoftmodem"
        interval: 10s
        timeout: 5s
        retries: 5

  ptp-master: # Base Station Side
    profiles: ["ptpsim"]
    container_name: ptp-master 
    command: tcpreplay -i eth0 -l 10000 --loopdelay-ms=1000 /ptpv2_sync.pcap
    networks:
      tsn-bridge-in:
        ipv4_address: 10.100.201.200
    cap_add:
      - NET_ADMIN
    build:
      context: ./docker/ptp-emulator

  ptp-slave: # UE Side
    profiles: ["ptpsim"]
    container_name: ptp-slave 
    command: tcpreplay -i eth0 -l 10000 --loopdelay-ms=1000 /ptpv2_delay_req.pcap
    networks:
      tsn-bridge-out:
        ipv4_address: 10.100.202.200
    cap_add:
      - NET_ADMIN
    build:
      context: ./docker/ptp-emulator

networks:
  5gs-bridge:
    ipam:
      driver: default
      config:
        - subnet: 10.100.200.0/24
    driver_opts:
      com.docker.network.bridge.name: 5gs-br

  tsn-bridge-in: # Base Station Side
    driver: macvlan
    ipam:
      config:
        - subnet: 10.100.201.0/24
    driver_opts:
      com.docker.network.bridge.name: tsn-br-in 

  tsn-bridge-out: # UE Side
    driver: macvlan
    ipam:
      config:
        - subnet: 10.100.202.0/24
    driver_opts:
      com.docker.network.bridge.name: tsn-br-out

volumes:
  dbdata:
